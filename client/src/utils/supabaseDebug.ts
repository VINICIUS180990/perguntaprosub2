// Arquivo para debug e teste das configura√ß√µes do Supabase
import { supabase } from "../supabaseClient";

export async function testarConexaoSupabase() {
  console.log("=== TESTE DE CONEX√ÉO SUPABASE ===");
  
  try {
    // Teste 1: Verificar conex√£o b√°sica
    console.log("1. Testando conex√£o b√°sica...");
    const { error: testError } = await supabase
      .from("perfil_usuario")
      .select("count")
      .limit(1);
    
    if (testError) {
      console.error("‚ùå Erro na conex√£o:", testError);
      return false;
    }
    
    console.log("‚úÖ Conex√£o b√°sica OK");
    
    // Teste 2: Verificar configura√ß√µes de autentica√ß√£o
    console.log("2. Testando configura√ß√µes de auth...");
    const { data: { session }, error: sessionError } = await supabase.auth.getSession();
    
    if (sessionError) {
      console.error("‚ùå Erro ao verificar sess√£o:", sessionError);
    } else {
      console.log("‚úÖ Auth configurado OK. Sess√£o atual:", session ? "Logado" : "N√£o logado");
    }
    
    // Teste 3: Verificar pol√≠ticas RLS
    console.log("3. Testando acesso √† tabela perfil_usuario...");
    const { error: rslError } = await supabase
      .from("perfil_usuario")
      .select("*")
      .limit(1);
    
    if (rslError) {
      console.error("‚ùå Erro RLS/Permiss√µes:", rslError);
      console.log("üí° Verifique as pol√≠ticas RLS na tabela perfil_usuario");
    } else {
      console.log("‚úÖ Acesso √† tabela OK");
    }
    
    return true;
  } catch (error) {
    console.error("üí• Erro geral:", error);
    return false;
  }
}

export async function testarCriacaoUsuario(email: string, senha: string, nome: string, nomeguerra: string) {
  console.log("=== TESTE DE CRIA√á√ÉO DE USU√ÅRIO ===");
  console.log("Email:", email);
  console.log("Nome:", nome);
  console.log("Nome de guerra:", nomeguerra);
  
  try {
    // Primeiro, verificar se o email j√° existe
    console.log("1. Verificando se email j√° existe...");
    
    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
      email,
      password: senha,
      options: {
        data: {
          full_name: nome,
          nomeguerra: nomeguerra
        }
      }
    });
    
    console.log("Resultado signUp:", { signUpData, signUpError });
    
    return { data: signUpData, error: signUpError };
    
  } catch (error) {
    console.error("Erro inesperado no teste:", error);
    return { data: null, error };
  }
}
